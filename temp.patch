diff --git a/Proton/Sources/Swift/Table/TableContentView.swift b/Proton/Sources/Swift/Table/TableContentView.swift
index 4c5828f..8b2993a 100644
--- a/Proton/Sources/Swift/Table/TableContentView.swift
+++ b/Proton/Sources/Swift/Table/TableContentView.swift
@@ -554,20 +554,26 @@ extension TableContentView: TableCellDelegate {
                 table.rowHeights[row].currentHeight = max(cell.initialHeight, bounds.height)
             }
         } else {
+            // If the cell height is decreasing
             if oldBounds.height > bounds.height {
-//                table.rowHeights[row].currentHeight = max(cell.initialHeight, table.maxContentHeightCellForRow(at: row)?.contentSize.height ?? 0)
                 let delta = (bounds.height - table.heightForCell(cell))
                 if let currentEditorContentSize = cell.editor?.contentSize.height {
                     let proposedCellHeight = currentEditorContentSize + delta
+                    // validate if there is another cell with the same or higher content size that is to be applied
                     let otherCellWithSameHeight = cellsInViewport.first{
                         guard let cellEditor = $0.editor else { return false }
                         return $0.id != cell.id && $0.rowSpan.contains(row) && cellEditor.contentSize.height >= proposedCellHeight
                     }
 
                     if otherCellWithSameHeight == nil || (otherCellWithSameHeight?.contentSize.height ?? 0) <= cell.contentSize.height {
-                        table.rowHeights[row].currentHeight += (bounds.height - table.heightForCell(cell))
-                        if table.rowHeights[row].currentHeight < cell.initialHeight {
-                            table.rowHeights[row].currentHeight = cell.initialHeight
+                        // reduce height only if new height for the row does not conflict with other cell having similar height
+                        let proposedHeight = table.rowHeights[row].currentHeight + (bounds.height - table.heightForCell(cell))
+                        if proposedHeight > (otherCellWithSameHeight?.contentSize.height ?? 0) {
+                            table.rowHeights[row].currentHeight += (bounds.height - table.heightForCell(cell))
+                            // If updated height falls below default initial height, reset it back.
+                            if table.rowHeights[row].currentHeight < cell.initialHeight {
+                                table.rowHeights[row].currentHeight = cell.initialHeight
+                            }
                         }
                     }
                 }
